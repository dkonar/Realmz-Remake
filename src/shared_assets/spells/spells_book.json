{"Steel Rain": "var name : String = 'Steel Rain'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Steel Rain\\n\\n Damage: 2-8\\n    Range: 10\\n    Target: Greater x Power\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['lightning.wav', 'sting.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 8\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(2, 8)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*7\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Power Wither": "var name : String = 'Power Wither'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Power Wither:  Those affected will lose spell points over time.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Whirl'\nvar sounds : Array = ['drippity beep.wav', 'underwater laser.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 5)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 5 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_sp_leak.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Poison Cloud": "var name : String = 'Poison Cloud'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Poison Cloud\\n\\n Damage: Death or 1-2 x Power\\n    Range: 6\\n    Target: Fixed Size\\n      Sight: NO'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['slurpy.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 2)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*100\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b4'\n\n\n\n# Implement special effects here\n\n", "Mind Melt": "var name : String = 'Mind Melt'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Mind Melt\\n\\n Damage: Perminent Confusion\\n    Range: 3 x Power\\n    Target: Ray\\n      Sight: NO\\nDuration: DRVs Caster'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Spinny'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['bwee.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 25\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 35\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(25, 35)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Shield from Projectiles": "var name : String = 'Shield from Projectiles'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 5  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Shield from Projectiles:  Those affected will be immune to normal missiles such as arrows, darts, etc...'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['jump.wav', 'metal armor.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*8\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'sf'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_pro_proj.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Magic Darts": "var name : String = 'Magic Darts'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Magic Darts\\n\\n Damage: 1-4\\n    Range: 15\\n    Target: Multi Target\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['energy blast.wav', 'spell launch 6.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 4\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(1, 4)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Caustic Vapor": "var name : String = 'Caustic Vapor'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Caustic Vapor\\n\\n Damage: 20-25\\n    Range: 1 x Power\\n    Target: Greater x Power\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['bloomp.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 20\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 25\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(20, 25)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Magic Screen III": "var name : String = 'Magic Screen III'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Magic Screen III:  Renders the targets completely immune to 3rd level spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['prout.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 8)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*45\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_spell_lvl_prot.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Plague": "var name : String = 'Plague'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Plague\\n\\n Damage: 10-20\\n    Range: 8\\n    Target: Greater x Power\\n      Sight: NO\\nDuration: 2-5 Rounds'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Thorns'\nvar proj_hit : String = 'Thorns'\nvar sounds : Array = ['spell launch 5.wav', 'bite.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(1, 3)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 5\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 15\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(5, 15)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*35\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Vapor Trail": "var name : String = 'Vapor Trail'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Vapor Trail\\n\\n Damage: 40-65\\n    Range: 2 x Power\\n    Target: Ray\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Miasma'\nvar sounds : Array = ['wind.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 40\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 65\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(40, 65)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*45\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Major Spell Deflector": "var name : String = 'Major Spell Deflector'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Major Spell Deflector:  Improved targeting options for Minor Spell Deflector.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['prout.wav', 'underwater laser.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 4)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*75\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_reflect_spells.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Major Attack Deflector": "var name : String = 'Major Attack Deflector'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Major Attack Deflector:  Similar to Minor Attack Deflector but with improved targeting capabilities.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['jump.wav', 'attack hit.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(3, 6)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*45\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_reflect_melee.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Sandman": "var name : String = 'Sandman'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Sandman:  Causes those that do not DRVs Mental to fall asleep and be helpless.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['identify.wav', 'dididup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b4'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_helpless.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Fire Flies": "var name : String = 'Fire Flies'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Fire Flies\\n\\n Damage: 35-45\\n    Range: 15\\n    Target: x Power\\n      Sight: NO\\nDuration: NA, -20% DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 9.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 35\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 40\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(35, 40)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Repulsive Bubble": "var name : String = 'Repulsive Bubble'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Repulsive Bubble\\n\\n Damage: 1-6 x Power\\n    Range: NA\\n    Target: All Adjacent\\n      Sight: NA\\nDuration: -10% Save'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['slimed.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 6 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 6)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*6\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'rd'\n\n\n\n# Implement special effects here\n\n", "Heal Blindness": "var name : String = 'Heal Blindness'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Heal Blindness: Cures blindness.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['jump.wav', 'poinkeroo.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Acid Bath": "var name : String = 'Acid Bath'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Acid Bath\\n\\n Damage: 5-10 x Power\\n    Range: 15\\n    Target: Fixed Size\\n      Sight: YES\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['big splat.wav', 'slimed.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 5 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(5, 10)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'bf'\n\n\n\n# Implement special effects here\n\n", "Fire Storm": "var name : String = 'Fire Storm'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Fire Storm\\n\\n Damage: 3-18\\n    Range: 10\\n    Target: Fixed Size\\n      Sight: Yes\\nDuration: 1 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 2.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 3\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 18\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(3, 18)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b7'\n\n\n\n# Implement special effects here\n\n", "Sleepwalk": "var name : String = 'Sleepwalk'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Sleepwalk:  Will reduce the fatigue level of the entire party.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['swup.wav', 'hit effect 4.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Phase": "var name : String = 'Phase'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 8  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Phase:  Allows the caster to teleport during battle.  The caster will still be able to perform some type of physical action after teleporting such as attacking with a weapon.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['prout.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1 + (2 * _power)\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Revive Dead": "var name : String = 'Revive Dead'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Revive Dead:  This spell will revive a dead character.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['swup.wav', 'resurrect death.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*100\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Electrical Protection": "var name : String = 'Electrical Protection'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Electrical Protection: Reduces all damage done by electrical based attacks by 1/2.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['bubble dip.wav', 'hit bumper.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(4, 12)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_prot_elect.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Itching Skin": "var name : String = 'Itching Skin'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Itching Skin:  Those affected will have a reduced chance to hit their opponent during combat.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Thorns'\nvar proj_hit : String = 'Thorns'\nvar sounds : Array = ['jump.wav', 'hit bumper.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 3)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*8\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_hindered_atk.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Creature Summon 5": "var name : String = 'Creature Summon 5'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Creature Summon 5:  Will  summon more powerful creatures than creature summon 4.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['pinball bumper.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*90\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Magic Grip": "var name : String = 'Magic Grip'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Magic Grip\\n\\n Damage: 2-6 X Power\\n    Range: Touch\\n    Target: Single\\n      Sight: NO\\nDuration: NA,  No DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spinny'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['bwabble.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 6 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 6)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Shock Palm": "var name : String = 'Shock Palm'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Shock Palm\\n\\n Damage: 10 + 2-4 x Power\\n    Range: 1\\n    Target: Single Target\\n      Sight: NA\\nResist:-5%xPower to DRVs & Resist'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['spell launch 6.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 10 + (2 * _power)\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10 + (4 * _power)\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(10, 10)\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 4)\n\treturn base_damage + scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Major Charm Foe": "var name : String = 'Major Charm Foe'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Major Charm Foe:  Will cause the target to change sides during a battle and fight for the casters side.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['hit effect 4.wav', 'boing.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*45\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Power Surge": "var name : String = 'Power Surge'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Power Surge:  Will infuse the target will additional spell points.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['boing.wav', 'hit effect 3.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 5 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 8 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(5, 8)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Major Soul Bind": "var name : String = 'Major Soul Bind'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Major Soul Bind:  Same as Soul Bind but with better targeting.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['underwater laser.wav', 'pops.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 4)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*35\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Minor Spell Deflector": "var name : String = 'Minor Spell Deflector'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 5  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Minor Spell Deflector:  Will cause spell effects to be reflected and affect the caster 33% of the time.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['prout.wav', 'underwater laser.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'sf'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_reflect_spells.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Splinters": "var name : String = 'Splinters'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Splinters:  The caster can cause a limited amount of wood to shatter into thousands of small splinters.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Thorns'\nvar proj_hit : String = 'Thorns'\nvar sounds : Array = ['swup.wav', 'pinball bumper.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Paralyzing Wall": "var name : String = 'Paralyzing Wall'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Paralyzing Wall: Will create a wall of stunning magic that will paralyze any who enter and does not resist.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = true\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Web'\nvar sounds : Array = ['pinball bumper.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'wh'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_helpless.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Spirit Drain": "var name : String = 'Spirit Drain'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Spirit Drain:  Will cause the target to lose a large amount of spell points every combat round.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['spell launch 5.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 10\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 20\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(10, 20)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*35\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_sp_leak.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Noxious Cloud": "var name : String = 'Noxious Cloud'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Noxious Cloud\\n\\n Damage: Cause Helpless\\n    Range: 4\\n    Target: Fixed Size, 4x4\\n      Sight: NO\\nDuration: 1 x Power, +35% DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['wind.wav', 'slimed.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_helpless.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Thought Lace": "var name : String = 'Thought Lace'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Thought Lace: Makes party more resistant to Charm spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spinny'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['smack.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*75\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_pro_hits.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Slug": "var name : String = 'Slug'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Slug:  This spell will add a magical substance to the bloodstream.  All those affected will move slower and have fewer actions per round than normal.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Web'\nvar sounds : Array = ['spell launch 4.wav', 'hit effect 1.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'cr'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_slow.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Puppet Master": "var name : String = 'Puppet Master'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Puppet Master:  Will restore a dead character to 1/10th of their maximum hit points.  These characters are not truly alive but in a state of animation.  They will not gain any victory points nor can they cast spells or use missile weapons.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['identify.wav', 'resurrect death.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*65\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_animated.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Cosmic Blast": "var name : String = 'Cosmic Blast'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Cosmic Blast\\n\\n Damage: 2-4 x Power\\n    Range: NA\\n    Target: All Enemy\\n      Sight: NA\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['lightning.wav', 'spell hit object.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 4 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 4)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\n\n\n# Implement special effects here\n\n", "Waterworld": "var name : String = 'Waterworld'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Waterworld:  Will create a temporary bubble around the party.  By force of will they can cause the bubble to move through water as if it could swim.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['bubbles.wav', 'drippity beep.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(3, 5)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 5 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_fleeing.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Shine": "var name : String = 'Shine'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Shine:  Creates a magical flame that will illuminate dark areas.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['spell launch 2.wav', 'spell launch 2.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 30 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(30, 30)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 30 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*3\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\n\n\n# Implement special effects here\n\n", "Invisible Skin": "var name : String = 'Invisible Skin'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Invisible Skin:  Invisible characters or monsters can move away from enemies without being attacked from behind.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['spell launch 5.wav', 'identify.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(4, 10)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*5\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_invisible.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Heal Large Wounds": "var name : String = 'Heal Large Wounds'\n# Can we auto-generate this?\nvar attributes : Array = ['Healing']\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Heal Large Wounds:  Heals damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['dididup.wav', 'hit effect 4.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 3 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 24 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(3, 24)\n\treturn scaled_damage * -1\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*11\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Multi Mutiny": "var name : String = 'Multi Mutiny'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Multi Mutiny:  Those affected will change alligance and fight for the caster.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['28', 'hit effect 4.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Shape Earth": "var name : String = 'Shape Earth'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Shape Earth:  Moves lots of dirt.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['claw.wav', 'claw.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(1, 1)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Superfly": "var name : String = 'Superfly'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Superfly:  Allows the party to perform fantastic acrobatic acts.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['dididup.wav', 'dididup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-12\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Adrenalin": "var name : String = 'Adrenalin'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Adrenalin:  This spell will add a magical substance to the bloodstream.  All those affected will move faster and have more actions per round than normal.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['claps.wav', 'dididup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*35\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'bf'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_speedy.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Magic Screen II": "var name : String = 'Magic Screen II'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Magic Screen II:  Renders the targets completely immune to 2nd level spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['prout.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 8)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_spell_lvl_prot.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Plane of Force": "var name : String = 'Plane of Force'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Plane of Force\\n\\n Damage: 2-8 x Power\\n    Range: 10\\n    Target: Wall, Can Rotate\\n      Sight: Yes\\nDuration: 1-4 Rounds, No DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = true\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['electric energize.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(1, 4)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 8 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 8)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*35\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'wh'\n\n\n\n# Implement special effects here\n\n", "Discover Secret": "var name : String = 'Discover Secret'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Discover Secret:  Increases the chance the party will detect a secret area.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['spell launch 6.wav', 'pops.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 10 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(10, 30)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 30 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*5\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_slow.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Heat Ray": "var name : String = 'Heat Ray'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Heat Ray\\n\\n Damage: 2-8\\n    Range: 2 x Power\\n    Target: Ray\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 1.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 8\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(2, 8)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Fearful Thoughts": "var name : String = 'Fearful Thoughts'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Fearful Thoughts:   Those that do not DRVs Mental will run away during combat.; Fearful Thoughts:  Those that do not resist will run away during combat.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Web'\nvar sounds : Array = ['wind.wav', 'bwabble.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_fleeing.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Lightning Strike": "var name : String = 'Lightning Strike'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Lightning Strike\\n\\n Damage: 1-6 x Power\\n    Range: 20\\n    Target: Single Target\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['spell launch 9.wav', 'lightning.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 20\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 6 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 6)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*5\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Discover Magic": "var name : String = 'Discover Magic'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Discover Magic:  Will reveal during combat or during treasure collection if items are magical in nature.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['spell launch 5.wav', 'boing.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(3, 7)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 7\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*1\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Heal Wounds": "var name : String = 'Heal Wounds'\n# Can we auto-generate this?\nvar attributes : Array = ['Healing']\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Heal Wounds:  Heals lots of damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['dididup.wav', 'hit effect 4.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 8 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 36 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(8, 36)\n\treturn scaled_damage * -1\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Power Gather": "var name : String = 'Power Gather'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Power Gather:  Will cause the target to accumulate spell points at an accelerated rate.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['underwater laser.wav', 'drippity beep.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 5)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 5 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_sp_regen.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Enchanted Blades": "var name : String = 'Enchanted Blades'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Enchanted Blades: This will cause those affected to do more damage in combat. It is not necessary to have a weapon to gain this benefit. Even those that use their bare hands will do more damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['identify.wav', 'attack hit.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(1, 3)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_phys_dmg_bonus.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Leap": "var name : String = 'Leap'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Leap:  Allows the party to leap over tall objects.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['claps.wav', 'dididup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Frostbite": "var name : String = 'Frostbite'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Frostbite\\n\\n Damage: 10-20 x Power\\n    Range: Touch\\n    Target: Single\\n      Sight: NO\\nDuration: NA, No DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Ice'\nvar sounds : Array = ['bloop.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 10 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 20 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(10, 20)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Chemical Protection": "var name : String = 'Chemical Protection'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Chemical Protection:  Those affected will have all damage of a chemical based attack against them reduced by 1/2.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Slime'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['bwabble.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(4, 12)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_prot_chem.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Open Lock": "var name : String = 'Open Lock'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Open Lock:  Will open a lock.  This spell will not always work.  It depends on the complexity of the lock.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['claps.wav', 'pops.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*45\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Plane of Fog": "var name : String = 'Plane of Fog'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Plane of Fog\\n\\n Damage: 6-12\\n    Range: 6\\n    Target: Wall, Can Rotate\\n      Sight: NO\\nDuration: 1 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = true\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['wind.wav', 'slurpy.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 6\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 12\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(6, 12)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'wh'\n\n\n\n# Implement special effects here\n\n", "Heal Disease": "var name : String = 'Heal Disease'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Heal Disease: Cures disease.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['slimed.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Sparkling Armor": "var name : String = 'Sparkling Armor'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 5  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Sparkling Armor:  Protection against physical attacks.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['dididup.wav', 'hit effect 1.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*2\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'sf'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_pro_hits.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Identify Objects": "var name : String = 'Identify Objects'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Identify Objects:  This spell will reveal specific information on a group of items.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['force field.wav', 'identify.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Solar Flare": "var name : String = 'Solar Flare'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Solar Flare\\n\\n Damage: 15-25\\n    Range: 12\\n    Target: Fixed Size\\n      Sight: Yes\\nDuration: 1 x Power, -20% DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 4.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 15\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 25\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(15, 25)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'cr'\n\n\n\n# Implement special effects here\n\n", "Voiceover": "var name : String = 'Voiceover'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Voiceover:  The caster can throw  his voice thus causing a diversion of sorts.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spinny'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['spell launch 6.wav', 'claps.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Multi Regenerate Stamina": "var name : String = 'Multi Regenerate Stamina'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Multi Regenerate Stamina:  Those affected will regenerate stamina at an accelerate rate.  This spell will even affect those of elven blood.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Miasma'\nvar sounds : Array = ['prout.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(5, 15)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 7\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_hp_regen.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Minor Attack Deflector": "var name : String = 'Minor Attack Deflector'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 5  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Minor Attack Deflector:  Causes all physical attacks to be reflected and be inflicted on the attacker 33% of the time.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['jump.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'sf'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_reflect_melee.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Blind": "var name : String = 'Blind'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Blind:  Will caues those that do not resist to go blind.  This will greatly hinder them during combat.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['bloomp.wav', 'poinkeroo.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_blind.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Mind Blank": "var name : String = 'Mind Blank'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Mind Blank:  Will stupefy the target making it impossible for that enemy to cast spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['dididup.wav', 'spell launch 6.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 6)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_dumb.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Creature Summon 6": "var name : String = 'Creature Summon 6'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Creature Summon 6:  Will  summon more powerful creatures than creature summon 5.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['pinball bumper.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*125\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Arctic Wind": "var name : String = 'Arctic Wind'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Arctic Wind\\n\\n Damage: 20-40 x Power\\n    Range: 15\\n    Target: Ray\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Ice'\nvar sounds : Array = ['wind.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 20 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 40 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(20, 40)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*60\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Radiate": "var name : String = 'Radiate'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Radiate\\n\\n Damage: 2-15 x Power\\n    Range: NA\\n    Target: All Adjacent\\n      Sight: NA\\nDRVs -10%'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['resurrect death.wav', 'swup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 15 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 15)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'rd'\n\n\n\n# Implement special effects here\n\n", "Ring of Fire": "var name : String = 'Ring of Fire'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Ring of Fire\\n\\n Damage: 10-25\\n    Range: 3\\n    Target: Fixed Size, (Ring)\\n      Sight: NO\\nDuration: 1 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['lightning.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 10\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 25\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(10, 25)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'rd'\n\n\n\n# Implement special effects here\n\n", "Enchanted Blade": "var name : String = 'Enchanted Blade'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Enchanted Blade:  Will cause those affected to do more damage in combat.  Those affected do not need to have a weapon in order to receive this benefit.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['bwabble.wav', 'clash.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*2\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_phys_dmg_bonus.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Flame Tongue": "var name : String = 'Flame Tongue'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Flame Tongue\\n\\n Damage: 8-16\\n    Range: 2 x Power\\n    Target: Ray\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 2.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 8\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 16\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(8, 16)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*18\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Silence": "var name : String = 'Silence'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Silence:  Those affected will not be able to cast spells due to a magical barrier in the throat.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['drippity beep.wav', 'swup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'bf'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_dumb.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Free Fall": "var name : String = 'Free Fall'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Free Fall:  Will allow the party or individuals to descend a long distance without taking damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['wind.wav', 'boing.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(2, 4)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_dumb.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Super Brawn": "var name : String = 'Super Brawn'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Super Brawn:  Those affected will have an increased chance to hit during combat and the damage done will be increased.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['identify.wav', 'boing.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(3, 8)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_strong.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Major Summons": "var name : String = 'Major Summons'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Major Summons:  Same as minor summons but will summon stronger creatures.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['pinball bumper.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*55\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Charm Foe": "var name : String = 'Charm Foe'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Charm Foe:  Affected targets will change their allegiance to that of the caster, thus fighting for the caster instead of against.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spinny'\nvar proj_hit : String = 'Ball'\nvar sounds : Array = ['hit effect 4.wav', 'identify.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Power Drain": "var name : String = 'Power Drain'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Power Drain:  Will drain the target of a massive amount of spell points.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['spell launch 5.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 30 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 40 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(30, 40)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*35\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Protection from Foe": "var name : String = 'Protection from Foe'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Protection from Foe:  Makes the target more difficult to hit for the enemy.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Ball'\nvar sounds : Array = ['hit effect 2.wav', 'hit effect 3.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 5)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*2\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_prot_evil.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Magic Aura": "var name : String = 'Magic Aura'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 9  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Magic Aura:  Those affected will be harder to hit in battle and will hit their own targets more often.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['swup.wav', 'dingy ray gun.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_aura.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Destroy Trap": "var name : String = 'Destroy Trap'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Destroy Trap:  This is a duel function spell.  It both destroys a traps and opens locks.  The higher the power level the better the chance of success. Each portion of the spell is determined separately.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['swup.wav', 'smack.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Time Trap": "var name : String = 'Time Trap'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Time Trap:  Cause your enemies to become helpless.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Web'\nvar sounds : Array = ['claps.wav', 'spell launch 3.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 4)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*45\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_helpless.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Minor Summons": "var name : String = 'Minor Summons'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Minor Summons:  Will summon creatures from the great void to battle for the caster during combat.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['pinball bumper.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Frozen Palm": "var name : String = 'Frozen Palm'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Frozen Palm\\n\\n Damage: 2-4 X Power\\n    Range: Touch\\n    Target: Single\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Ice'\nvar sounds : Array = ['spell launch 7.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 4 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 4)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*3\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Dumbstruck": "var name : String = 'Dumbstruck'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Dumbstruck:  Those struck dumb will not be able to cast spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['swup.wav', 'bwabble.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(3, 6)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*8\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_dumb.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Teleport Party": "var name : String = 'Teleport Party'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Teleport Party:  Will allow the party to teleport to a specific location.  This spell is only used in special encounters.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['hit bumper.wav', 'bwee.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-45\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Protection from Heat": "var name : String = 'Protection from Heat'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Protection from Heat:  Reduces damage taken by heat based spells by 1/2.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Ice'\nvar sounds : Array = ['bubbles.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(4, 12)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_prot_fire.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Protection from Cold": "var name : String = 'Protection from Cold'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Protection from Cold:  Reduces damage taken by cold based spells by 1/2.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['swup.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(4, 12)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_prot_ice.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Death": "var name : String = 'Death'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Death\\n\\n Damage:Death,-10%Resist x Power\\n    Range: 5\\n    Target: Single Target\\n      Sight: YES\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['pinball bumper.wav', 'spell launch 3.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*75\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Flame Spikes": "var name : String = 'Flame Spikes'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Flame Spikes\\n\\n Damage: 1-4 x Power\\n    Range: NA\\n    Target: All Enemy\\n      Sight: NO\\nDuration: NA  +10% DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 1.wav', 'spell hit object.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 4 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 4)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\n\n\n# Implement special effects here\n\n", "Transmute Other": "var name : String = 'Transmute Other'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Transmute Other:  This spell will cause an enemy that does not resist to be transformed into some other type of creature.  Beware, the new creature could be considerably weaker or stronger than the original.  There is no way to tell.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['jump.wav', 'drippity beep.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Plane of Thorns": "var name : String = 'Plane of Thorns'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Plane of Thorns\\n\\n Damage: 5-10\\n    Range: 10\\n    Target: Wall, Can Rotate\\n      Sight: YES\\nDuration: 1 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = true\nvar proj_tex : String = 'Thorns'\nvar proj_hit : String = 'Thorns'\nvar sounds : Array = ['pinball bumper.wav', 'claw.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 5\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(5, 10)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'wh'\n\n\n\n# Implement special effects here\n\n", "Soul Bind": "var name : String = 'Soul Bind'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Soul Bind:  Those that do not DRVs Caster will be held in place and be helpless.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['hit effect 2.wav', 'hit effect 4.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 4)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Ball Lightning": "var name : String = 'Ball Lightning'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Ball Lightning\\n\\n Damage: 30-40 x Power\\n    Range: 10\\n    Target: Fixed Size\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['lightning.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 30 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 40 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(30, 40)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*75\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Limited Phase": "var name : String = 'Limited Phase'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 8  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Limited Phase:  Will allow the caster to teleport during combat.  The caster\\'s turn will be over after phasing.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['prout.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Regenerate Stamina": "var name : String = 'Regenerate Stamina'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Regenerate Stamina:  Will cause those affected to regenerate stamina during combat.  This spell will also work on those with elven blood.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Miasma'\nvar sounds : Array = ['prout.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(2, 6)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 6 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*35\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_hp_regen.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Statue": "var name : String = 'Statue'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Statue:  Will cause the flesh of the target to turn to solid stone.  This will kill any creature.  The only way to bring back a character from this condition is to have Flesh cast upon them.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['big splat.wav', 'teleport.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'p_petrified.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Fog of Doom": "var name : String = 'Fog of Doom'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Fog of Doom\\n\\n Damage: 7-35\\n    Range: 8\\n    Target: Greater x Power\\n      Sight: NO\\nDuration: 1-2 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['slurpy.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(1, 2)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 7\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 35\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(7, 35)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Improved Arcanic Bubble": "var name : String = 'Improved Arcanic Bubble'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Improved Arcanic Bubble:  Same as Arcanic Bubble with improved targeting options.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['spell launch 3.wav', 'club.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 6)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_sp_absorb.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Shell Shock": "var name : String = 'Shell Shock'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Shell Shock\\n\\n Damage: 20-40\\n    Range: NA\\n    Target: All Adjacent\\n      Sight: NA\\nDuration: 1 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['bwabble.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 20\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 40\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(20, 40)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'rd'\n\n\n\n# Implement special effects here\n\n", "Mind Rash": "var name : String = 'Mind Rash'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Mind Rash\\n\\n Damage: 4-7 + (4-7 x Power)\\n    Range: NA\\n    Target: All Enemy\\n      Sight: NA\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Thorns'\nvar sounds : Array = ['dididup.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 4 + (4 * _power)\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 7 + (7 * _power)\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(4, 7)\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(4, 7)\n\treturn base_damage + scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*90\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\n\n\n# Implement special effects here\n\n", "Fireball": "var name : String = 'Fireball'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Fireball\\n\\n Damage: 1-16\\n    Range: 15\\n    Target: Larger x Power\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 2.wav', 'big explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 15\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 16\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(1, 16)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*9\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Psi Shield": "var name : String = 'Psi Shield'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Psi Shield:  Reduces all damage done by mental based attacks to be reduced by 1/2.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['bwee.wav', 'bloomp.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(4, 12)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_prot_mental.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Speak Language": "var name : String = 'Speak Language'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Speak Language:  Will allow the caster to converse with creatures who they otherwise would not be able.  It also allows the caster to read any written language.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spinny'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['swup.wav', 'identify.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Fantastic Wings": "var name : String = 'Fantastic Wings'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Fantastic Wings:  Each person in the party will sprout magical wings that will allow them to fly for a short time.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['bubble dip.wav', 'force field.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Remove Item": "var name : String = 'Remove Item'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Remove Item'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Web'\nvar sounds : Array = ['claps.wav', 'hit effect 4.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*6\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Hover": "var name : String = 'Hover'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Hover:  Allows the party to hover  over or float over a pit or chasm.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['claps.wav', 'spell launch 5.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 5 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(5, 10)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 10 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_dumb.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Psi Wave": "var name : String = 'Psi Wave'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Psi Wave\\n\\n Damage: 5 x Power\\n    Range: NA\\n    Target: All Enemy\\n      Sight: NA\\nDuration: NA, DRVs Caster'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spinny'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['dididup.wav', 'bubbles.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 5 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(5, 10)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\n\n\n# Implement special effects here\n\n", "Disease": "var name : String = 'Disease'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Disease:  Will cause those affected to be diseased and take damage until a Heal Disease spell is cast on them.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['hit effect 1.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 2)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b4'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_disease.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Creature Summon 2": "var name : String = 'Creature Summon 2'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Creature Summon 2:  Will summon more powerful creatures than Creature Summon 1.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['pinball bumper.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Remove Items": "var name : String = 'Remove Items'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Remove Items:  Removes all cursed items from the body of the target.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Web'\nvar sounds : Array = ['claps.wav', 'bombom.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Dragon Hide": "var name : String = 'Dragon Hide'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Dragon Hide: Those affected will have their skin transformed to dragon hide.  All physical damage reduced by 5 points/attack.  Any successful attack will still do at least 1  point of damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Thorns'\nvar proj_hit : String = 'Thorns'\nvar sounds : Array = ['spell hit object.wav', 'nuk.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 16 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(16, 32)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 32 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_helpless.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Stinging Lights": "var name : String = 'Stinging Lights'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Stinging Lights\\n\\n Damage: 3-18\\n    Range: 20\\n    Target: x Power\\n      Sight: Yes\\nDuration:  2 Rounds. -20% DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['prout.wav', 'pinball bumper.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 2)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 20\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 3\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 18\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(3, 18)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Dig Hole": "var name : String = 'Dig Hole'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Dig Hole:  Will allow the party to dig a hole by magical means.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['cloth armor.wav', 'cloth armor.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Multi Invisible Skin": "var name : String = 'Multi Invisible Skin'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 9  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Multi Invisible Skin:  Will cause those over a large area to grow a second skin.  This skin will turn them invisible.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['spell launch 5.wav', 'identify.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_invisible.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Solor Winds": "var name : String = 'Solor Winds'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Solor Winds'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['lightning.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(2, 4)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 10\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 25\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(10, 25)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'cr'\n\n\n\n# Implement special effects here\n\n", "Festering Wounds": "var name : String = 'Festering Wounds'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Festering Wounds\\n\\n Damage: 5/Round\\n    Range: NA\\n    Target: All Enemy\\n      Sight: NA\\nDuration: 1-3 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Miasma'\nvar sounds : Array = ['big splat.wav', 'slimed.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 3)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*12\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_disease.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Flame Missile": "var name : String = 'Flame Missile'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Flame Missile\\n\\n Damage: 10-15 + (5 x Power)\\n    Range: 3 x Power\\n    Target: Single\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Arrow'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['bow.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 10 + (5 * _power)\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 15 + (5 * _power)\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(10, 15)\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(5, 5)\n\treturn base_damage + scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Plane of Fire": "var name : String = 'Plane of Fire'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Plane of Fire\\n\\n Damage: 3-18\\n    Range: 10\\n    Target: Can Rotate\\n      Sight: Yes\\nDuration: 1-2 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = true\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 2.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 3\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 18\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(3, 18)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'wh'\n\n\n\n# Implement special effects here\n\n", "Poison": "var name : String = 'Poison'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Poison:  Will poison those that do not DRVs Chemical.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['slimed.wav', 'big splat.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 2\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(2, 2)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_poison.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Magic Shield": "var name : String = 'Magic Shield'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Magic Shield:  Renders the targets completely immune to 2nd level spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['teleport.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'rd'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_spell_lvl_prot.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Finger of Pain": "var name : String = 'Finger of Pain'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Finger of Pain\\n\\n Damage: 20 + 5xPower\\n    Range: 8\\n    Target: Single Target\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['jump.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 20 + (5 * _power)\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 20 + (5 * _power)\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(20, 20)\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(5, 5)\n\treturn base_damage + scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*35\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Annihilate": "var name : String = 'Annihilate'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Annihilate\\n\\n Damage: 20-30 x Power\\n    Range: 6\\n    Target: Fixed Size\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Whirl'\nvar sounds : Array = ['smack.wav', 'lightning.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 20 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 30 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(20, 30)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b4'\n\n\n\n# Implement special effects here\n\n", "Magic Screen IV": "var name : String = 'Magic Screen IV'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Magic Screen IV:  Renders the targets completely immune to 4th level spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['prout.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 8)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*70\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_spell_lvl_prot.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Heal Medium Wounds": "var name : String = 'Heal Medium Wounds'\n# Can we auto-generate this?\nvar attributes : Array = ['Healing']\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Heal Medium Wounds:  Heals damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['dididup.wav', 'bwee.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 16 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 16)\n\treturn scaled_damage * -1\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Heal Poison": "var name : String = 'Heal Poison'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Heal Poison: Cures poison.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Miasma'\nvar sounds : Array = ['big splat.wav', 'slimed.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Sentry": "var name : String = 'Sentry'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Sentry:  When sentry is in effect the party will not be suprised by random battles.  All special battles/encounters will still be encountered.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['swup.wav', 'identify.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 24 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(24, 24)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 24 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_slow.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Hands to Clay": "var name : String = 'Hands to Clay'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Hands to Clay:  Will allow the caster to shape stone as if it were made from clay.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['drippity beep.wav', 'teleport.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Acid Splash": "var name : String = 'Acid Splash'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Acid Splash\\n\\n Damage: 2-6 x Power\\n    Range: 3 x Power\\n    Target: Ray\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['big splat.wav', 'slimed.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 6 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 6)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Confuse": "var name : String = 'Confuse'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Confuse:  Those affected will do one of several things each round they are affected.  They may run away, attack friends or foe or they may just stand around in total dismay for that round.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['hit effect 4.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 9\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b7'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_confused.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Plane of Ice": "var name : String = 'Plane of Ice'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Plane of Ice\\n\\n Damage: 2-10 x Power\\n    Range: 10\\n    Target: Can Rotate\\n      Sight: Yes\\nDuration: 1-4 rounds'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = true\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Ice'\nvar sounds : Array = ['spell launch 5.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(1, 4)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 10)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'wh'\n\n\n\n# Implement special effects here\n\n", "Flesh": "var name : String = 'Flesh'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Flesh:  Will cause petrified characters to return to a fleshy state.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['spell launch 9.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Cloud of Cleavers": "var name : String = 'Cloud of Cleavers'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Cloud of Cleavers\\n\\n Damage: 10-15\\n    Range: 6\\n    Target: Fixed Size, 4x4\\n      Sight: Yes\\nDuration: 1-2 x Power, No Resist'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Thorns'\nvar proj_hit : String = 'Thorns'\nvar sounds : Array = ['clash.wav', 'attack hit.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 10\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 15\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(10, 15)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Magic Screen I": "var name : String = 'Magic Screen I'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Magic Screen I:  Renders the targets completely immune to 1st level spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['prout.wav', 'bloomp.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 8)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_spell_lvl_prot.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Warmth": "var name : String = 'Warmth'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 9  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Warmth:  Will reduce damage taken from cold based attacks by 1/2.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['dididup.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_prot_ice.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Stun": "var name : String = 'Stun'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Stun:  Will cause the target to become helpless.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Web'\nvar sounds : Array = ['force field.wav', 'teleport.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Vorpal Plate": "var name : String = 'Vorpal Plate'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Vorpal Plate:  Will make those affected harder to hit in combat.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['clash.wav', 'attack hit.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*8\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b4'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_pro_hits.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Daze": "var name : String = 'Daze'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Daze: Will cause those affected to do one of several things.  They may attack their enemies, their friends, or run away.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['bloomp.wav', 'hit effect 4.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(1, 4)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 4\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*7\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_confused.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Ogre Hide": "var name : String = 'Ogre Hide'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Ogre Hide: Those affected will have their skin transformed to ogre hide.  All physical damage reduced by 5 points/attack.  Any successful attack will still do at least 1  point of damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Thorns'\nvar proj_hit : String = 'Thorns'\nvar sounds : Array = ['spell hit object.wav', 'nuk.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 8 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(8, 16)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 16 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_helpless.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Heal Small Wounds": "var name : String = 'Heal Small Wounds'\n# Can we auto-generate this?\nvar attributes : Array = ['Healing']\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Heal Small Wounds:  Heals damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['dididup.wav', 'hit bumper.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 8 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 8)\n\treturn scaled_damage * -1\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Major Vorpal Plate": "var name : String = 'Major Vorpal Plate'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 9  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Major Vorpal Plate:  Similar to Vorpal Plate but with improved targeting capabilities.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['clash.wav', 'attack hit.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_pro_hits.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Improved Power Drain": "var name : String = 'Improved Power Drain'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Improved Power Drain:  The same as power drain but with improved targeting'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['bwabble.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 3 + (1 * _power)\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 5 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(3, 0)\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 5)\n\treturn base_damage + scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Flash": "var name : String = 'Flash'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Flash\\n\\n Damage: 2-15 x Power\\n    Range: 10\\n    Target: Ray\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Spinny'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['spell launch 1.wav', 'dingy ray gun.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 15 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 15)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Pulse": "var name : String = 'Pulse'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Pulse\\n\\n Damage: 20-40\\n    Range: NA\\n    Target: All Adjacent\\n      Sight: NO\\nDuration: 1 x Power'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['electric energize.wav', 'spell effect heal.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 20\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 40\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(20, 40)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'rd'\n\n\n\n# Implement special effects here\n\n", "Arcanic Bubble": "var name : String = 'Arcanic Bubble'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 5  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Arcanic Bubble:  Allows the target to absorb spell points from spells that affect the target.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['spell launch 6.wav', 'club.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'sf'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_sp_absorb.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Scorched Earth": "var name : String = 'Scorched Earth'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Scorched Earth\\n\\n Damage: 2-10\\n    Range: 2 x Power\\n    Target: Ray\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 2.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(2, 10)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Creature Summon 1": "var name : String = 'Creature Summon 1'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Creature Summon 1:  Will summon creatures from the void to fight for the caster during battle.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['pinball bumper.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Destroy Magic": "var name : String = 'Destroy Magic'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Destroy Magic:  This spell will remove all non-permanent spell effects on those it is cast on.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Whirl'\nvar sounds : Array = ['spell launch 8.wav', 'hit effect 3.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Destroy  Turn Undead": "var name : String = 'Destroy / Turn Undead'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Destroy / Turn Undead'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Whirl'\nvar sounds : Array = ['spell launch 8.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\n\n\n# Implement special effects here\n\n", "Creature Summon 3": "var name : String = 'Creature Summon 3'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Creature Summon 3:  Will  summon more powerful creatures than creature summon 2.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['pinball bumper.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Tangle Weed": "var name : String = 'Tangle Weed'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Tangle Weed:  Will cause magical tendrils to entangle anyone moving in an area thus reducing their movement.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Web'\nvar proj_hit : String = 'Web'\nvar sounds : Array = ['spell launch 6.wav', 'bwabble.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'cr'\n\n\n\n# Implement special effects here\n\n", "Mind Mines": "var name : String = 'Mind Mines'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Mind Mines\\n\\n Damage: 2-10\\n    Range: 20\\n    Target: Greater x Power\\n      Sight: NO\\nDuration: 2-3 Rounds'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['energy blast.wav', 'bwabble.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 3)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 20\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(2, 10)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Shiver": "var name : String = 'Shiver'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Shiver\\n\\n Damage: 1-2 x Power\\n    Range: NA\\n    Target: All Enemy\\n      Sight: NA\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Ice'\nvar sounds : Array = ['wind.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 2)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\n\n\n# Implement special effects here\n\n", "Cool Breeze": "var name : String = 'Cool Breeze'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 9  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Cool Breeze:  Will cause those affected to take 1/2 damage from all heat based spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['swup.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_prot_fire.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Shrink Foe": "var name : String = 'Shrink Foe'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Shrink Foe:  Will make those affected easier to hit in combat.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Sphere'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['hit bumper.wav', 'dididup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 3\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(3, 6)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 6\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 74\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*3\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_hindered_def.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Finger of Death": "var name : String = 'Finger of Death'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Finger of Death\\n\\n Damage: Death\\n    Range: 8\\n    Target: Single Target\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['jump.wav', 'door slam.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*125\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Deep Freeze": "var name : String = 'Deep Freeze'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Deep Freeze\\n\\n Damage: 1-10 x Power\\n    Range: 10\\n    Target: Ray\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Ice'\nvar sounds : Array = ['wind.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 10)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Mind Duel": "var name : String = 'Mind Duel'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Mind Duel\\n\\n Damage: 4-10 x Power\\n    Range: 12\\n    Target: Single\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['pinball bumper.wav', 'swup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 4 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 10 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(4, 10)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Sphere of Protection": "var name : String = 'Sphere of Protection'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 5  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Sphere of Protection:  Will cause the caster to be immune to spells up to the fourth level.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['bubble dip.wav', 'underwater laser.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*50\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'sf'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_spell_lvl_prot.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Static Discharge": "var name : String = 'Static Discharge'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Static Discharge\\n\\n Damage: 40-50 x Power\\n    Range: NA\\n    Target: All Adjacent\\n      Sight: NA\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['lightning.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 40 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 50 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(40, 50)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*75\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'rd'\n\n\n\n# Implement special effects here\n\n", "Wizard Eye": "var name : String = 'Wizard Eye'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Wizard Eye:  Allows the caster to see in his mind special things.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['underwater laser.wav', 'identify.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 5 + (1 * _power)\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(5, 5)\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 10)\n\treturn base_duration + scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 5 + (10 * _power)\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_cursed.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Lightning Bolt": "var name : String = 'Lightning Bolt'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Lightning Bolt\\n\\n Damage: 3-18\\n    Range: 2 x Power\\n    Target: Ray\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['lightning.wav', 'prout.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 3\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 18\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(3, 18)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Missile Screen": "var name : String = 'Missile Screen'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Missile Screen:  Will render those affected immune to all types of missiles.  i.e. Arrows, Rocks, Darts, Throwing Stars  etc....'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['energy blast.wav', 'swup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 4 + (1 * _power)\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(4, 0)\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 6)\n\treturn base_duration + scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 6 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*15\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_pro_proj.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Multi Sandman": "var name : String = 'Multi Sandman'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 10  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Multi Sandman:  Causes everyone in a large area to DRVs Mental or fall asleep.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['claps.wav', 'hit effect 4.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 1)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*90\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'ae'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_helpless.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Acid Rain": "var name : String = 'Acid Rain'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 4\nvar selection_cost : int = 10\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Acid Rain\\n\\n Damage: 3-16\\n    Range: 8\\n    Target: Greater x Power\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Miasma'\nvar proj_hit : String = 'Slime'\nvar sounds : Array = ['big splat.wav', 'slimed.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 3\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 16\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(3, 16)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*12\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Magic Screen V": "var name : String = 'Magic Screen V'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = true\nvar description : String = 'Magic Screen V:  Renders the targets completely immune to 5th level spells.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['hit bumper.wav', 'bloomp.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 2\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(2, 8)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 5\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*100\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_spell_lvl_prot.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Weakness": "var name : String = 'Weakness'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Weakness:  Drains a large amount of spell points from the target.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spinny'\nvar sounds : Array = ['spell launch 8.wav', 'hit effect 3.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 30\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar base_duration = randi_range(30, 50)\n\treturn base_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 50\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Vorpal Shield": "var name : String = 'Vorpal Shield'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 7  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 3\nvar selection_cost : int = 6\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = true\nvar in_combat : bool = false\nvar description : String = 'Vorpal Shield:  Reduces damage taken by those affected by 5pts per attack.  Any attack will still do at least 1 point of damage.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Whirl'\nvar proj_hit : String = 'Target'\nvar sounds : Array = ['attack hit.wav', 'chaclunk.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 12 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(12, 24)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 24 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*20\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'af'\n\nstatic func add_traits_to_target(_casterchar : Creature, _targetcbbutton, _power):\n\tvar traitscript = load('res://shared_assets/traits/'+'t_helpless.gd')\n\tvar trait_array : Array = [_power]\n\t_targetcbbutton.creature.add_trait(traitscript , trait_array)\n\n# Implement special effects here\n\n", "Banish": "var name : String = 'Banish'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Banish\\n\\n Damage: DRVs Caster or Die\\n    Range: 0\\n    Target: Fixed Size\\n      Sight: NO\\nResist: -5% x Power Level'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['claps.wav', 'pops.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*125\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'cr'\n\n\n\n# Implement special effects here\n\n", "Creature Summon 4": "var name : String = 'Creature Summon 4'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 0  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 5\nvar selection_cost : int = 15\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Creature Summon 4:  Will  summon more powerful creatures than creature summon 3.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Whirl'\nvar sounds : Array = ['pinball bumper.wav', 'jump.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn _power\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 12\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*60\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn _power\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Psionic Spear": "var name : String = 'Psionic Spear'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 6  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Psionic Spear\\n\\n Damage: 1-3\\n    Range: 3 x Power\\n    Target: Ray\\n      Sight: NO\\nDuration: NA, Save vs. Caster'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = true\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['spell launch 4.wav', 'dididup.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 3 * _power\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 3\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(1, 3)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*4\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Watergate": "var name : String = 'Watergate'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 11  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 6\nvar selection_cost : int = 21\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = false\nvar description : String = 'Watergate:  Will form an air bubble around the party.  By force of will they can navigate the bubble as if it could swim in the water.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Cloud'\nvar proj_hit : String = 'Cloud'\nvar sounds : Array = ['lightning.wav', 'bubbles.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*-70\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Hail Storm": "var name : String = 'Hail Storm'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Hail Storm\\n\\n Damage: 15-20\\n    Range: 10\\n    Target: Larger x Power\\n      Sight: Yes\\nDuration: 1-2 x Power, -20% DRVs'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ice'\nvar proj_hit : String = 'Ice'\nvar sounds : Array = ['electric energize.wav', 'smack.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 1 * _power\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\tvar scaled_duration = 0\n\tfor i in range(_power) :\n\t\tscaled_duration += randi_range(1, 2)\n\treturn scaled_duration\n\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 2 * _power\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 15\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 20\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(15, 20)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*30\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Flame Hands": "var name : String = 'Flame Hands'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 1  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Flame Hands\\n\\n Damage: 1-3 x Power\\n    Range: Touch\\n    Target: Single\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 7.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 1\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 3 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 3)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*2\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Electric Pulse": "var name : String = 'Electric Pulse'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 2\nvar selection_cost : int = 3\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Electric Pulse\\n\\n Damage: 2-8 x Power\\n    Range: 10\\n    Target: Fixed Size\\n      Sight: YES\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['hit effect 2.wav', 'hit effect 3.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 2 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 8 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(2, 8)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*25\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'b1'\n\n\n\n# Implement special effects here\n\n", "Energy Storm": "var name : String = 'Energy Storm'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Sorcerer']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 3  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Energy Storm\\n\\n Damage: 1-3 x Power\\n    Range: 6\\n    Target: Fixed Size, Large\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Spark'\nvar proj_hit : String = 'Spark'\nvar sounds : Array = ['spell launch 1.wav', 'electric energize.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 7\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1 * _power\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 3 * _power\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar scaled_damage = 0\n\tfor i in range(_power) :\n\t\tscaled_damage += randi_range(1, 3)\n\treturn scaled_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*10\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn 'bf'\n\n\n\n# Implement special effects here\n\n", "Meteor Shower": "var name : String = 'Meteor Shower'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Meteor Shower\\n\\n Damage: 40-60\\n    Range: 10\\n    Target: Greater x Power\\n      Sight: NO\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = false # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Target'\nvar proj_hit : String = 'Sphere'\nvar sounds : Array = ['jump.wav', 'pops.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 40\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 60\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(40, 60)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*40\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Multi Morph Other": "var name : String = 'Multi Morph Other'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Enchanter']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 7\nvar selection_cost : int = 28\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Multi Morph Other:  Similar to Transmute Other but with improved targeting capabilities.'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Ball'\nvar proj_hit : String = 'Ball'\nvar sounds : Array = ['drippity beep.wav', 'drippity beep.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 8\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 0\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\treturn 0\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*80\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n", "Brimstones": "var name : String = 'Brimstones'\n# Can we auto-generate this?\nvar attributes : Array = []\n# Can we auto-generate this?\nvar tags : Array = []\n\n# Not merged with duplicates\nvar schools : Array = ['Priest']\n\n# Fuction of target type, effect (phase), and line of sight\nvar targettile : int = 4  #0=anywhere 1=creature 2=empty 3=nowall \n\nvar level : int = 1\nvar selection_cost : int = 1\nvar max_plevel : int = 7 # Is this ever not 7?\nvar in_field : bool = false\nvar in_combat : bool = true\nvar description : String = 'Brimstones\\n\\n Damage: 1-4\\n    Range: 10\\n    Target: Greater x Power\\n      Sight: Yes\\nDuration: NA'\n\n# How does this work?\nvar resist : int = 0 #ignores resistances and dodge \nvar los : bool = true # line of sight\nvar ray : bool = false\nvar rot : bool = false\nvar proj_tex : String = 'Fire'\nvar proj_hit : String = 'Fire'\nvar sounds : Array = ['spell launch 2.wav', 'small explode.wav']\nvar max_focus_loss : int = 0 # Where does this come from?\n\n# Is this number of targets?\nstatic func get_targets(_power : int, __casterchar)->int :\n\treturn 1\n\nstatic func get_min_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_duration_roll(_power : int, __casterchar) -> int:\n\treturn 0\nstatic func get_max_duration(_power : int, __casterchar) -> int :\n\treturn 0\n\nstatic func get_range(_power : int, __casterchar) -> int :\n\treturn 10\n\nstatic func get_min_damage(_power:int, _casterchar) :\n\treturn 1\n\nstatic func get_max_damage(_power:int, _casterchar) :\n\treturn 4\n\nstatic func get_damage_roll(_power : int, _casterchar) :\n\tvar base_damage = randi_range(1, 4)\n\treturn base_damage\n\n# How does this work?\nstatic func get_accuracy(_casterchar, _power : int) :\n\treturn 100 #= infinite wiith resist==0 anyway\n\nstatic func get_sp_cost(_power : int, _casterchar) :\n\treturn _power*3\n\n# How is this different from get_targets\nstatic func get_target_number(_power : int, _casterchar) :\n\treturn 1\n\n# Area of effect (the shape of the spell target)\nstatic func get_aoe(_power : int, _casterchar) :\n\treturn ['b1','b2','b3','b4','b5','b6','b7'][_power]\n\n\n\n# Implement special effects here\n\n"}